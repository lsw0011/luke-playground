version: "3.7"

services:
    backend:
        container_name: backend
        build:
            context: .
            dockerfile: ./backend/Dockerfile
        environment:
            FLASK_APP: code/backend.py
            PYTHONPATH: /code
        ports:
            - 1111:1111
        volumes:
            - ./common:/code/common
            - ./backend:/code
        command: flask run --reload --host=0.0.0.0 --port=1111
    
    director:
        container_name: director
        build:
            context: .
            dockerfile: ./director/Dockerfile
        environment:
            FLASK_APP: code/director.py
            PYTHONPATH: /code
        ports:
            - 1113:1113
        volumes:
            - ./director:/code
            - ./common:/code/common
        command: flask run --reload --host=0.0.0.0 --port=1113 

    frontend:
        container_name: frontend
        build: 
            context: .
            dockerfile: ./frontend/Dockerfile
        ports:
            - 1112:1112
        volumes:
            - ./frontend:/app
        command: npm run start-dev

    database:
        container_name: database
        build:
            context: .
            dockerfile: ./database/Dockerfile
        environment:
            FLASK_APP: code/database.py
            PYTHONPATH: /code
        ports:
            - 1114:1114
        volumes:
            - ./database:/code
            - ./common:/code/common
        command: flask run --reload --host=0.0.0.0 --port=1114

    database_db:
        container_name: database_db
        hostname: database_db
        image: postgres:13
        restart: always
        environment:
            POSTGRES_DB: database
            POSTGRES_USER: user
            POSTGRES_PASSWORD: root
        ports:
            - 5432:5432